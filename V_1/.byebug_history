exit
distance_matrix
ditance_matrix
exit
@source_matrix
finish_ver
start_ver
path
length
c
calc_path_and_possible(longest_sequence, transform_matrix_tw)
longest_sequence
q
find_longest_sequence(@path)
@path
path
@customers
longest_sequence
q
possible_path_array
find_longest_sequence(@path)
@path
c
possible_path_array
exit
xit
exit
@modified_matrix
exit
copy_item
c
value_in_column
value_in_column.min
exit
@source_matrix[11][9][:distance] - @source_matrix[11][9][:distance]
new_line_matrix
exit
new_line_matrix
c
@source_matrix[11][9][:distance] - 4
@source_matrix[11][9][:distance]
@source_matrix[11][9]
@source_matrix
exit
line
key
c
exit
value_in_column
n
c
n
value
n
line[column_num][:distance]
column_num
line
key
c
exit
path
finish_ver
start_ver
exit
finish
start
exit
distance_matrix
exit
@count
c
@count
exit
collection.select {|customer| customer_ids.include?(customer[:id])}
ollection.select {|customer| customer_ids.include?(customer[:id])}
collection
exit
collection.select {|key, value| customer_ids.include?(value)}exit
collection.select {|key, value| customer_ids.include?(value)}
collection.select {|key, value| customer_ids.include?(value[:id])}
collection
c
collection
exit
@customers
customer_parser
customer_parse
@customer
n
c
prepare_matrix.empty?
q
possible_path_array
n
q
prepare_matrix
q
c
exit
c
item
c
item
c
item
item.min_by{|k, v| v[:distance]}[1][:distance]
c
item.min_by{|k, v| v[:distance]}[1][:distance]
c
item.min_by{|k, v| v[:distance]}[1][:distance]
c
item.min_by{|k, v| v[:distance]}[1][:distance]
item
c
prepare_matrix
exit
prepare_matrix
c
exit
c
new_matrix
c
modify_path
modify_matrix
transform_matrix_tw
exit
vertex
distance_matrix
c
exit
vertex[:distance]
vertex
c
vertex
exit
transform_matrix_tw
transform_matrix
c
exit
distance_matrix[from][key][:distance]exit
distance_matrix[from][key][:distance]
distance_matrix[from][key]
distance_matrix
vertex
c
vertex
c
vertex
exit
value
key
to
from
vertex
c
vertex
c
vertex
exit
vertex
c
vertex
exit
value[:from_customer]exit
value[:from_customer]
value[:from_ustomer]
value
key
exit
value
key
exit
distance_matrix
exit
path
c
exit
distance_matrix
c
exit
current_time
longest_sequence
c
longest_sequence
vertex
current_time
exit
c
exit
until_next_vertex
next_vertex
next_vertex[:to_customer][:time2]
exit
@solution
exit
in_solution_array
in_solution
c
in_solution
c
exit
c
in_solution
c
in_solution
c
in_solution
c
in_solution
exit
@solution
exit
c
exit
key
value
longest_sequence
c
longest_sequence
c
exit
longest_sequence
key
longest_sequence
c
longest_sequence
c
exit
longest_sequence
c
longest_sequence
c
longest_sequence
c
longest_sequence
c
exit
longest_sequence
c
longest_sequence
c
exit
xit
longest_sequence
c
longest_sequence
c
exit
longest_sequence
c
longest_sequence
c
exit
exi
in_solution_array
c
